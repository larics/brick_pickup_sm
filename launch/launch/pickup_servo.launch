<launch>
    <arg name="namespace"   default="$(env UAV_NAMESPACE)"/>
    <arg name="odom"        default="mavros/global_position/local"/>
    <arg name="patch_centroid" default="pointcloud_filter/pc_filter/patch_centroid"/>


    <group ns="$(arg namespace)">
        
         <!-- Visual servo state machine parameters -->
        <rosparam command="load"
            file="$(find uav_ros_control)/config/reference/visual_servo_brick.yaml" />
        
        <!-- Visual servo node -->
        <node
            pkg="uav_ros_control"
            type="visual_servo_idle"
            name="visual_servo_idle_node"
            output="screen">

            <!-- Topic remapping -->
            <remap from="odometry" to="$(arg odom)"/>
            <remap from="imu" to="/mavros/imu/data"/>
            <remap from="yaw_error" to="red_color_filter/orientation_err"/>
            <remap from="centroid_point" to="pointcloud_filter/pc_filter/patch_centroid/filtered" />
            <remap from="position_hold/trajectory" to="position_hold/dummy_trajectory"/>

        </node>

        <!-- Visual servo state machine parameters -->
        <rosparam command="load"
            file="$(find uav_ros_control)/config/reference/visual_servo_brick_sm.yaml" />
        
        <!-- Visual Servo state machine node -->
        <node
            pkg="uav_ros_control"
            type="pickup_sm"
            name="pickup_state_machine"
            output="screen">

            <remap from="odometry" to="$(arg odom)"/>
            <remap from="centroid_global" to="visual_servo/centroid/transformed" />
            <remap from="centroid_local" to="visual_servo/centroid/compensated/transformed_local" />
            <remap from="generator/trajectory" to="topp/input/trajectory"/>
            <remap from="trajectory_point"     to="position_hold/trajectory"/>
            <remap from="yaw_error" to="debug/yaw_error"/>
        </node>
    </group>
</launch>

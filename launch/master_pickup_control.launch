<launch>
  <arg name="namespace" default="$(env UAV_NAMESPACE)"/>
  
  <group ns="$(arg namespace)">
    <!-- Point generator search algorithm -->
    <node name="point_generator" pkg="uav_search" type="waypoint_generator_ros.py" output="screen"/>

    <rosparam command="load" file="$(find brick_pickup_sm)/config/master_pickup_sm.yaml"/>

    <!-- This node remaps brick position only when brick is certain that we see kopter bricks -->
    <node name="kopter_patch_node" pkg="brick_pickup_sm" type="kopter_centroid_patch.py" output="screen"/>

    <!-- Master Pickup State Machine -->
    <node name="master_brick_pickup" pkg="brick_pickup_sm" type="master_brick_pickup" output="screen">
      <remap from="n_contours" to="red_color_filter/nContours"/>
      <!-- remap from="global_centroid_point" to="visual_servo/centroid/transformed" / -->
      <remap from="global_centroid_point" to="kopter/patch_position"/>
    </node>

    <!-- Mission Control - brick task handler -->
    <include file="$(find mbzirc_mission_control)/launch/ch2_uav.launch"/>

    <!-- Color setter for MBZIRC_color_filter -->
    <node name="color_filter_init" pkg="color_filter" type="filter_initial_dummy.py" output="screen"/>
  </group>

</launch>